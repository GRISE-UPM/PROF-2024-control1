/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

plugins {
    id 'jacoco'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // mi liena
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    // Mi linea - Dependencia para Mockito
    testImplementation 'org.mockito:mockito-core:5.5.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.test {
    jvmArgs '-Dnet.bytebuddy.experimental=true'
}

jacoco {
    toolVersion = "0.8.10" // Asegúrate de usar una versión actualizada de JaCoCo
}

jacocoTestReport {
    dependsOn test // Generar el informe después de ejecutar los tests
    reports {
        xml.required = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'METHOD'

            // Asegurar que el coverage de ramas sea del 100%
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

